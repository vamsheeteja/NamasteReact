ClassBased component 

TS: 2:40:00
- componentDidMount: it will be called only AFTER FIRST RENDER 

after every subsequent render it is UPDATED

there is difference between mount and update and unmount 

- componentDidUpdate: will be called after every UPDATE...

----------------------
Functional components

useEffect 

- if no dep. array -> if will be called after each and every render.

- [] empty dep. array -> it will be called once after initial render.

- [count] -> every time my count changes it will be called.


useEffect({
 // API call
}, [count, count2])

in class based component to this we used to write

componentDidUpdate(prevProps, prevState) {
    if(
        this.state.count != prevState.count ||
        this.state.count2 != prevState.count2)
    ) {
        //code
    }
}

// OMG>!!!

suppose if we are having two useEffects

useEffect({
 // API call
}, [count])

useEffect({
 // API call
}, [count2])

then...

componentDidUpdate(prevProps, prevState) {
    if(
        this.state.count != prevState.count ||
        this.state.count2 != prevState.count2)
    ) {
        //code
    }
    if(
        this.state.count != prevState.count ||
        this.state.count2 != prevState.count2)
    ) {
        //code
    }
}
...

React is SPA 
we are changing the page (components), eventually the concept of the page we are changing, but it is single page in itself..

so there are lots of things we need to clear

import React from 'react'

class Profile extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      userInfo: {
        name: 'Dummy Name',
        location: 'Dummy Location',
      },
    }
    console.log('Child - Constructor ' + this.props.name)
  }

  // single page application also do have cons init
  componentDidMount() {
    this.timer = setInterval(() => {
      console.log('Namaste React OP')
    }, 1000)
    // (O.O) when we move on to another component the interval again start..
    // like called 2nt time interval will be twice 1 3 5.. called 3rd time thrice 1 4 7 10 ...
    // SPA was most powerful but this is a Bad thing
    // this is bcoz we are not Reloading the page,
    // Performance loss is happening..
    // to CLEAR this setInterval using componentUnmount

    console.log('Component did mount')
  }

  // componentDidUpdate() will be called after every render
  componentDidUpdate() {
    console.log('Component Did update')
  }

  // componentWillUnmount will be called before this component will unmount(go) from the DOM ie if we go to another page.
  componentWillUnmount() {
    clearInterval(this.timer)
    console.log('CompentWillUnmount')
  }

  render() {
    // DE-Structuring
    const { avatar_url, name, location } = this?.state?.userInfo
    console.log('Child - render ' + this.props.name)

    return (
      <div>
        <h1> Profile Class Component</h1>
        <img src={avatar_url} />
        <h2> Name: {name}</h2>
        <h3> Location: {location} </h3>
      </div>
    )
  }
}

export default Profile
