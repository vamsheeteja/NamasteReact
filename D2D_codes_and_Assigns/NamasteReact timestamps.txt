Namaste React imp time stamps

Lecture -2

21:07 how to a make production-ready app ?
--- in between what are bundlers?
31:30 how to initialize npm and what all it asks ?

45-1:10:0 dependency, devdependency, package-lock.json, node-modules what and why

1:13:52 installing React, ReactDOM with npm

1:35:00 about dist folder

2:16:44 Transitive dependency

-------------------------------------------------------------------------------------------------------

Lecture -4 

IMP: carausel for offers display for differenct locations, cities based.. 
1:40:00 Config Driven UI

#1
(props) can be any other name

#2
to access -> props.<param_name> param_name which use have used to pass from a container.

#3
BADASS things
destructuring the object  props to {restaurant} <- passing only this

instead of props
({restaurant}) // now we do not need props.

#4
destructuring restaurant object

const [name, cuisines, cloudinaryImageId, avgRating] = restaurant;

#5 Amazing!!!!! stuff
destructuring Everything on the fly....................

...RestaurantList[0].info
my RestaurantList[0].info has all my props which i will use 
so use '...' to pass all the data as props..

OMGGGGG

const Body = () => {
  return (
    <div className="restaurant-list">
      {/* Props inside React-- pass props : passing some data into a component (either functional or class) */}
      <RestaurantCard {...RestaurantList[0].info} />
      <RestaurantCard {...RestaurantList[1].info} />
      <RestaurantCard {...RestaurantList[2].info} />
      <RestaurantCard {...RestaurantList[3].info} />
      <RestaurantCard {...RestaurantList[4].info} />
      <RestaurantCard {...RestaurantList[5].info} />
      <RestaurantCard {...RestaurantList[6].info} />
      <RestaurantCard {...RestaurantList[7].info} />
      <RestaurantCard {...RestaurantList[8].info} />
      <RestaurantCard {...RestaurantList[10].info} />
      <RestaurantCard {...RestaurantList[11].info} />
      <RestaurantCard {...RestaurantList[12].info} />
      <RestaurantCard {...RestaurantList[13].info} />
    </div>
  )
}

2:33:37 Virtual DOM in React

2:47:46 
Reconcilation in React uses a DIFF algorithms , that Diff algorithm finds out the different between Trees and 
only Re-render the specific portions of the app which is found out by diff algorithm.

That why to help this algo we use keys.

React Fiber is a Reconcilation Engine came in React 16.
This new Reconcilation Engine is responsible for DIFF.


+++++++++++++++===================-------------------======================

Lecture 5 

51:00 Implementing search box HOOKS

56:10 React uses ONE-Way Data Binding

2:01:10 Working of filter data

+++++++++++++++++=================-------------------+++++++++++++++++++---

Lecture - 6

5:00 Config driven UI

12:00 Hooks (Explained Again)

44:00 Proper filetering (Restructing our restro code)

53:50 Microservices Architecture

1:08:11 Exploring the world

1:18:59 Loading types of Api 


+++++++==================+++++++++++++++++++++++

Lecture 7 Finding the path

24:00 we can not optimize images after it comes to our browser, So we put in optimized images on browser.

27:30 Creating Shimmer


30:00 - 35:30 (around) for every small things do not install npm packages. Install only if necessary. 
Formik for input details validations.

35:50 Actual Starting of Lecture 7 Finding the path (of different pages of our name) Routing.

npm package: react-router-dom 

42:16 Linking Page/ Routing 
createBrowserRouter, RouterProvider


1:12:00 useRouterError HOOK

1:18:20 Problem with Anchor tag: If you click on it it just REFRESHES the WHOLE Page. BUT we are building a SINGLE PAGE APPLICATION

1:19:30 SPA

1:22:00 TYPES OF ROUTING
client side : when changing routes all pages will come from the client itself (here it will not make any network call if click on any link). Bcoz all out COMPONENTS are already there in out code. We dont have to got to server.

and 
server side : when changing route all pages will come from server.

So react-router-dom gives us `Link` 

This Link tag developed by REMIX 

This Link tag at EOD uses anchor tag behind the scenes. We use it bcoz the react-router-dom is doing some black magic. The react-router-dom is keeping track of the Link tag. Browser understand a tag so it is converted to a tag

1:32:42 NESTED ROUTING (we want to keep header and footer intact even if we go to another pages)

1:50:00 Adding RestaurantMenu

2:22:00 Very IMPORTANT Optional Chaining and FIXING IT